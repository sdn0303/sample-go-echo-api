name: Go CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  imports:
    name: Check Imports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Go Imports Check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: imports
          token: ${{ secrets.GITHUB_TOKEN }}

  linting:
    name: Lint and Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Code
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: lint
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Static Check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: staticcheck
          token: ${{ secrets.GITHUB_TOKEN }}

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Security Check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: sec
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: "-exclude=G104"

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.1

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Dependencies
        run: go mod download

#       - name: Run Unit Tests
#         run: go test -v ./...

      - name: Build Application
        run: go build -v ./cmd/sample-go-echo-api/main.go
